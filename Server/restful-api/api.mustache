var express = require('express'); 
var router = new express.Router(); 

var methodOverride = require('method-override');
// override with POST having ?_method=POST
router.use(methodOverride(function (req, res) {
  if (req.body && typeof req.body === 'object' && '_method' in req.body) {
   // look in urlencoded POST bodies and delete it
   var method = req.body._method
   delete req.body._method
   return method
  }
 }));

{{#models}}
var {{modelTitle}} = require('../Models/{{modelTitle}}');
{{/models}}

{{#models}}
router.post('/{{modelTitle}}', function(req, res){
  let obj = Object.assign(new {{modelTitle}}(), req.body);
    obj.save(result => res.json(result));
});

router.get('/{{modelTitle}}', function(req, res){
    {{modelTitle}}.all(rows => res.json(rows));
});

router.get('/{{modelTitle}}/:id', function(req, res){
    {{modelTitle}}.get(req.params.id, function (result) {
        res.json(result);
    });
});

router.put('/{{modelTitle}}/:id', async function (req, res) {
    var obj = Object.assign(new {{modelTitle}}(), req.body);

    let promise = new Promise((res, rej) => {
       {{modelTitle}}.get(req.params.id, function(result,err){
            res(req.params.id);
        });
        setTimeout(() => res(), 1000);
    });

    obj.id = await promise;
    obj.save(result => res.json(result));
});

router.delete('/{{modelTitle}}/:id', function(req, res){
    {{modelTitle}}.delete(req.params.id, function (result) {
        res.json(result);
    });
});

{{/models}}


module.exports = router;



